name: Publish

on:
  workflow_call:
    inputs:
      canary:
        required: false
        type: boolean
        default: false
      package_scope:
        required: false
        type: string
        default: '@deque'
      registry_url:
        required: true
        type: string
    secrets:
      agora_email:
        required: true
      agora_token:
        required: true

jobs:
  publish_job:
    name: Publish
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install jq

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Configure npm
        run: |
          npm config set ${{ inputs.package_scope }}:registry ${{ inputs.registry_url }}
          npm config set email ${{ secrets.agora_email }}
          npm config set _auth ${{ secrets.agora_token }}
          npm config set always-auth true

      - name: Update package version
        if: ${{ github.ref_type == 'tag' }}
        run: |
          version=`jq -r .version package.json`
          if [ ${{ inputs.canary }} = true ]
          then
            sha=${GITHUB_SHA:0:8}
            sed -i "s/$version/$version-$sha/g" package.json
          else
            new_version=${TAG/v/}
            sed -i "s/$version/$new_version/g" package.json
          fi

      # The `git commit` command will fail if no changes are present.
      # This intentionally prevents publishing multiple package versions
      # with the same `version` property value in `package.json`.
      - name: Commit version change to repo
        if: ${{ github.ref_type == 'tag' && inputs.canary == false }}
        run: |
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"
          git checkout master
          git commit -am "chore: update package version"
          last_commit=`git rev-parse HEAD`
          git tag --force $TAG $last_commit
          git push --force --tags
          git push --force --all

      - name: Publish
        run: |
          if [ ${{ inputs.canary }} = true ]
          then
            npm publish --tag=next
          else
            npm publish
          fi
